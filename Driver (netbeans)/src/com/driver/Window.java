/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.driver;

import com.NeuralNetLibrary.NeuralNetwork;
import java.awt.Color;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JFileChooser;

/**
 *
 * @author carlo
 */
public class Window extends javax.swing.JFrame implements Observer {

    private int numEpoche = 300;
    private int hdim = 32;
    private double epsilon = 0.3;
    private Integer i = 0;
    private static String azione = "000_090";
    private ServerThread server;
    //private NeuralThread tr = null;
    private Viewer view;
    private ButtonHandler buttonHandler;
    JoystickFrame joystickFrame;
    boolean isInAutoMode = false;
    AutoModeThread auto;

    public Window() {

        joystickFrame = new JoystickFrame();
        //joystickFrame.start();

        buttonHandler = joystickFrame.getButtonHandler();
        buttonHandler.addObserver(this);

        initComponents();
        settaLabel(azione);
        training.setFocusable(false);
        avanti.setFocusable(false);
        destra.setFocusable(false);
        sinistra.setFocusable(false);
        indietro.setFocusable(false);
        connetti.setFocusable(false);

        setResizable(false);

        this.setFocusable(true);

        view = (Viewer) viewer;
        view.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        viewer = new  Viewer();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        connetti = new javax.swing.JButton();
        training = new javax.swing.JButton();
        avanti = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        sinistra = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        indietro = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        destra = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar3 = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TestButton = new javax.swing.JButton();
        sendNetButton = new javax.swing.JButton();
        autoModeButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuApri = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuEsci = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuButtonMap = new javax.swing.JMenuItem();
        neuralNetParam = new javax.swing.JMenuItem();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Driver Application");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        viewer.setBackground(new java.awt.Color(102, 102, 102));
        viewer.setMinimumSize(new java.awt.Dimension(176, 144));
        viewer.setPreferredSize(new java.awt.Dimension(176, 144));

        javax.swing.GroupLayout viewerLayout = new javax.swing.GroupLayout(viewer);
        viewer.setLayout(viewerLayout);
        viewerLayout.setHorizontalGroup(
            viewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        viewerLayout.setVerticalGroup(
            viewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), null));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        connetti.setText("connect");
        connetti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connettiActionPerformed(evt);
            }
        });

        training.setText("training Network");
        training.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainingHandler(evt);
            }
        });

        avanti.setBackground(new java.awt.Color(200, 200, 200));
        avanti.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        avanti.setFocusable(false);
        avanti.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel2.setText("F");

        javax.swing.GroupLayout avantiLayout = new javax.swing.GroupLayout(avanti);
        avanti.setLayout(avantiLayout);
        avantiLayout.setHorizontalGroup(
            avantiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avantiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
        avantiLayout.setVerticalGroup(
            avantiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, avantiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        sinistra.setBackground(new java.awt.Color(200, 200, 200));
        sinistra.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        sinistra.setFocusable(false);
        sinistra.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel3.setText("B");

        javax.swing.GroupLayout sinistraLayout = new javax.swing.GroupLayout(sinistra);
        sinistra.setLayout(sinistraLayout);
        sinistraLayout.setHorizontalGroup(
            sinistraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sinistraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
        sinistraLayout.setVerticalGroup(
            sinistraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sinistraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        indietro.setBackground(new java.awt.Color(200, 200, 200));
        indietro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        indietro.setFocusable(false);
        indietro.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel4.setText("L");

        javax.swing.GroupLayout indietroLayout = new javax.swing.GroupLayout(indietro);
        indietro.setLayout(indietroLayout);
        indietroLayout.setHorizontalGroup(
            indietroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indietroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
        indietroLayout.setVerticalGroup(
            indietroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, indietroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        destra.setBackground(new java.awt.Color(200, 200, 200));
        destra.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        destra.setFocusable(false);
        destra.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel5.setText("R");

        javax.swing.GroupLayout destraLayout = new javax.swing.GroupLayout(destra);
        destra.setLayout(destraLayout);
        destraLayout.setHorizontalGroup(
            destraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
        destraLayout.setVerticalGroup(
            destraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, destraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        jProgressBar1.setMaximum(120);
        jProgressBar1.setMinimum(60);
        jProgressBar1.setValue(90);
        jProgressBar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jProgressBar3.setMaximum(255);
        jProgressBar3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel6.setText("Speed");

        jLabel7.setText("Steering");

        TestButton.setText("test Network");
        TestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestButtonActionPerformed(evt);
            }
        });

        sendNetButton.setText("send Network");
        sendNetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendNetButtonActionPerformed(evt);
            }
        });

        autoModeButton.setText("auto mode");
        autoModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoModeButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuApri.setText("Apri");
        jMenuApri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuApriActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuApri);
        jMenu1.add(jSeparator1);

        jMenuEsci.setText("Esci");
        jMenuEsci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEsciActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuEsci);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Setup");

        jMenuButtonMap.setText("set button map");
        jMenuButtonMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuButtonMapActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuButtonMap);

        neuralNetParam.setText("set neural network parameter");
        neuralNetParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neuralNetParamActionPerformed(evt);
            }
        });
        jMenu2.add(neuralNetParam);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewer, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connetti, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(autoModeButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(training, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sendNetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sinistra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avanti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(indietro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(destra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(avanti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sinistra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indietro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewer, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(connetti)
                            .addComponent(sendNetButton)
                            .addComponent(autoModeButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(training)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TestButton))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trainingHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainingHandler
        // TODO add your handling code here:
/*        if (tr != null && tr.isAlive()) {
         settaArea("La fase di training è già stata avviata");
         } else {
         settaArea("fase di training avviata...");
         System.out.println("training avviato...");
         i = i + 1;
         connetti.setEnabled(false);
         tr = new NeuralThread(epsilon,numEpoche,hdim);
         tr.setPriority(Thread.MAX_PRIORITY);
         tr.start();
         }
         i = i + 1;*/

        settaArea("fase di training avviata...");
        System.out.println("training avviato...");
        connetti.setEnabled(false);
        NeuralThread tr = new NeuralThread(epsilon, numEpoche, hdim);
        tr.setPriority(Thread.MAX_PRIORITY);
        tr.start();

    }//GEN-LAST:event_trainingHandler

    public static void settaBottone() {
        connetti.setText("connect");
    }

    private void connettiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connettiActionPerformed
        // TODO add your handling code here:
        JButton bottone = (JButton) evt.getSource();

        if (server != null && server.isAlive()) {
            training.setEnabled(true);
            view.setConnected(false);
            bottone.setText("connect");
            server.stopServer();
        } else {
            settaArea("Connessione in corso\n");
            server = new ServerThread(view);
            server.start();
            bottone.setText("disconnect");
            training.setEnabled(false);
        }

    }//GEN-LAST:event_connettiActionPerformed

    private void TestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestButtonActionPerformed
        // TODO add your handling code here:
        TestNetwork test = new TestNetwork();
        test.start();
    }//GEN-LAST:event_TestButtonActionPerformed

    private void jMenuApriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuApriActionPerformed
        // TODO add your handling code here:
        TestNetwork test = new TestNetwork();
        test.start();
    }//GEN-LAST:event_jMenuApriActionPerformed

    private void jMenuEsciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEsciActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuEsciActionPerformed

    private void jMenuButtonMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuButtonMapActionPerformed
        // TODO add your handling code here:
        joystickFrame.stop();

        joystickFrame = new JoystickFrame();
        //joystickFrame.start();

        buttonHandler = joystickFrame.getButtonHandler();
        buttonHandler.addObserver(this);

        joystickFrame.setVisible(true);
    }//GEN-LAST:event_jMenuButtonMapActionPerformed

    private void sendNetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendNetButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("read net");


        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            System.out.println("File selezionato: " + fileChooser.getSelectedFile());
            try {
                FileInputStream fin = new FileInputStream(fileChooser.getSelectedFile());
                try (ObjectInputStream ois = new ObjectInputStream(fin)) {
                    NeuralNetwork net = (NeuralNetwork) ois.readObject();
                    NeuralNetSender sender = new NeuralNetSender(net);
                    sender.start();
                }
            } catch (IOException | ClassNotFoundException e) {
                System.out.println(e.getMessage());
            }
        } else {
            System.out.println("Operazione annullata");
        }
    }//GEN-LAST:event_sendNetButtonActionPerformed

    private void autoModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoModeButtonActionPerformed
        // TODO add your handling code here:
        if (!isInAutoMode) {
            isInAutoMode = true;
            auto = new AutoModeThread(view);
            auto.start();
            TestButton.setEnabled(false);
            connetti.setEnabled(false);
            training.setEnabled(false);
            sendNetButton.setEnabled(false);
        } else {
            auto.stopServer();
            isInAutoMode = false;
            TestButton.setEnabled(true);
            connetti.setEnabled(true);
            training.setEnabled(true);
            sendNetButton.setEnabled(true);
        }

    }//GEN-LAST:event_autoModeButtonActionPerformed

    private void neuralNetParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neuralNetParamActionPerformed
        // TODO add your handling code here:
        NeuralNetParamsFrame paramsFrame = new NeuralNetParamsFrame(this);
        paramsFrame.setVisible(true);
    }//GEN-LAST:event_neuralNetParamActionPerformed
    /**
     * @param args the command line arguments
     */
    //</editor-fold>

    /* Create and display the form */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TestButton;
    private javax.swing.JButton autoModeButton;
    private javax.swing.JPanel avanti;
    private static javax.swing.JButton connetti;
    private javax.swing.JPanel destra;
    private javax.swing.JPanel indietro;
    private javax.swing.JButton jButton1;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuApri;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuButtonMap;
    private javax.swing.JMenuItem jMenuEsci;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private static javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem neuralNetParam;
    private javax.swing.JButton sendNetButton;
    private javax.swing.JPanel sinistra;
    private javax.swing.JButton training;
    private javax.swing.JPanel viewer;
    // End of variables declaration//GEN-END:variables

    public void setNeuralNetParameters(double epsilon, int numEpoche, int hdim) {
        this.epsilon = epsilon;
        this.hdim = hdim;
        this.numEpoche = numEpoche;
    }

    synchronized public static String getAzione() {
        return azione;
    }

    synchronized public static void setAzione(String action) {
        azione = action;
    }

    public void doAction(String str) {
        settaLabel(str);
        String[] str2 = azione.split("\\_");
        int speed = Integer.parseInt(str2[0]);
        int angle = Integer.parseInt(str2[1]);

        jProgressBar3.setValue(speed);
        jProgressBar1.setValue(angle);

        if (speed > 0) {
            avanti.setBackground(Color.green);
        } else {
            if (speed < 0) {
                indietro.setBackground(Color.green);
            } else {
                indietro.setBackground(new Color(200, 200, 200));
                avanti.setBackground(new Color(200, 200, 200));
            }
        }

        if (angle < 90) {
            sinistra.setBackground(Color.green);
        } else {
            if (angle > 90) {
                destra.setBackground(Color.green);
            } else {
                sinistra.setBackground(new Color(200, 200, 200));
                destra.setBackground(new Color(200, 200, 200));
            }
        }
    }

    public static void settaLabel(String stringa) {
        jLabel1.setText(stringa);
    }

    public static void settaArea(String str) {
        jTextArea1.append(str + "\n");
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
    }

    @Override
    public void update(Observable o, Object arg) {
        setAzione((String) arg);
        doAction(azione);
    }
}
